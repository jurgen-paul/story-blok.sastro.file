---
import { useStoryblokApi } from "@storyblok/astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";

const storyblokApi = useStoryblokApi();

// export async function getStaticPaths() {
//   const { data } = await storyblokApi.get("cdn/links", {
//     version: "draft",
//   });
//   let links = data.links;
//   links = Object.values(links);

//   return links
//     .filter((link) => !link?.is_folder)
//     .map((link) => {
//       return {
//         params: {
//           slug: link.slug === "home" ? undefined : link.slug,
//         },
//       };
//     });
// }

let story;

if (Astro.locals["_storyblok_preview_data"]) {
  story = Astro.locals["_storyblok_preview_data"];
} else {
  const { slug } = Astro.params;
  // Fetch the story from the API if it's not available in Astro.locals
  const { data } = await storyblokApi.get(
    `cdn/stories/${slug === undefined ? "home" : slug}`,
    {
      version: "draft",
    }
  );

  story = data.story;
}
---

<!-- <script define:vars={{ storyId }} type="module">
  import { setupStoryblokManager } from "@storyblok/astro";
  setupStoryblokManager(storyId);
</script> --><!-- <script define:vars={{ storyId }}>
  // TODO: needs to be here to have Bridge initialized correctly - maybe different solution possible?
  // This block is needed to let Storyblok manager work, as it is looking for the parameter in the URL
  if (storyId) {
    // if location.search doesn't contain _storyblok, add it
    if (!location.search.includes("_storyblok")) {
      // if it doesn't contain any query params, add _storyblok
      if (!location.search) {
        location.search = `_storyblok=${storyId}`;
      } else {
        // if it contains other query params, add _storyblok after the first one
        location.search = location.search.replace(
          "?",
          `?_storyblok=${storyId}&`
        );
      }
    }
  }
</script> -->
<BaseLayout>
  <StoryblokComponent blok={story.content} />
</BaseLayout>
