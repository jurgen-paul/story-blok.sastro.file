---
import { useStoryblokApi } from "@storyblok/astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import type { ISbStoryData } from "@storyblok/astro";

const storyblokApi = useStoryblokApi();

let story: ISbStoryData;
let storyId: number = null;

// Check if the Story data is available in Astro.locals (coming from middleware)
console.log(Astro.locals);
if (Astro.locals["_storyblok_preview_data"]) {
  story = Astro.locals["_storyblok_preview_data"];
  storyId = story.id;
} else {
  // Fetch the story from the API if it's not available in Astro.locals
  const { data } = await storyblokApi.get("cdn/stories/home", {
    version: "draft",
  });

  story = data.story;
  storyId = story.id;
}
---

<!-- <script define:vars={{ storyId }} type="module">
  import { setupStoryblokManager } from "@storyblok/astro";
  setupStoryblokManager(storyId);
</script> -->
<script define:vars={{ storyId }}>
  // This block is needed to let Storyblok manager work, as it is looking for the parameter in the URL
  if (storyId) {
    // if location.search doesn't contain _storyblok, add it
    if (!location.search.includes("_storyblok")) {
      // if it doesn't contain any query params, add _storyblok
      if (!location.search) {
        location.search = `_storyblok=${storyId}`;
      } else {
        // if it contains other query params, add _storyblok after the first one
        location.search = location.search.replace(
          "?",
          `?_storyblok=${storyId}&`
        );
      }
    }
  }
</script>
<BaseLayout>
  <StoryblokComponent blok={story.content} />
</BaseLayout>
